--RESERVATION-STATE-----------------------------------
 
MERGE INTO RESERVATION_STATE AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (1, 'CART');
 
MERGE INTO RESERVATION_STATE AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (2, 'PENDING');
 
MERGE INTO RESERVATION_STATE AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (3, 'CANCELED');
 
MERGE INTO RESERVATION_STATE AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (4, 'PAID');
 
MERGE INTO RESERVATION_STATE AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (5, 'REJECTED');
 
MERGE INTO RESERVATION_STATE AS target USING (SELECT 6 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (6, 'COMPLETED');

--PUBLISHER-TYPE------------------------------------
 
MERGE INTO PUBLISHER_TYPE AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (1, 'USER');
 
MERGE INTO PUBLISHER_TYPE AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME) VALUES (2, 'AGENT');

--PRICE-LIST-----------------------------------------------
 
MERGE INTO PRICE_LIST AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME, DISCOUNT_PERCENTAGE, MILEAGE_THRESHOLD, MILEAGE_PENALTY, WARRANTY_PRICE, PUBLISHER_ID, PUBLISHER_TYPE_ID) VALUES (1, 'Car 1 Price list', 20, 200, 20, 100, 1, 2 );

MERGE INTO PRICE_LIST AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME, DISCOUNT_PERCENTAGE, MILEAGE_THRESHOLD, MILEAGE_PENALTY, WARRANTY_PRICE, PUBLISHER_ID, PUBLISHER_TYPE_ID) VALUES (2, 'Car 2 Price list', 15, 200, 20, null, 1, 2 );

MERGE INTO PRICE_LIST AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME, DISCOUNT_PERCENTAGE, MILEAGE_THRESHOLD, MILEAGE_PENALTY, WARRANTY_PRICE, PUBLISHER_ID, PUBLISHER_TYPE_ID) VALUES (3, 'Car 3 Price list', 5, null, null, 200, 1, 2 );

MERGE INTO PRICE_LIST AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME, DISCOUNT_PERCENTAGE, MILEAGE_THRESHOLD, MILEAGE_PENALTY, WARRANTY_PRICE, PUBLISHER_ID, PUBLISHER_TYPE_ID) VALUES (4, 'Car 4 Price list', 3, null, null, null, 1, 2 );

MERGE INTO PRICE_LIST AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, NAME, DISCOUNT_PERCENTAGE, MILEAGE_THRESHOLD, MILEAGE_PENALTY, WARRANTY_PRICE, PUBLISHER_ID, PUBLISHER_TYPE_ID) VALUES (5, 'Car 5 Price list', 10, 200, 20, null, 1, 1 );

--CAR-PRICE-LIST------------------------------------------
MERGE INTO CAR_PRICE_LIST AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, CAR_ID, PRICE_LIST_ID, UNIX_TIMESTAMP) VALUES (1, 1, 1, 1546300800);

MERGE INTO CAR_PRICE_LIST AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, CAR_ID, PRICE_LIST_ID, UNIX_TIMESTAMP) VALUES (2, 2, 2, 1546300800);

MERGE INTO CAR_PRICE_LIST AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, CAR_ID, PRICE_LIST_ID, UNIX_TIMESTAMP) VALUES (3, 3, 3, 1546300800);

MERGE INTO CAR_PRICE_LIST AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, CAR_ID, PRICE_LIST_ID, UNIX_TIMESTAMP) VALUES (4, 4, 4, 1546300800);

MERGE INTO CAR_PRICE_LIST AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, CAR_ID, PRICE_LIST_ID, UNIX_TIMESTAMP) VALUES (5, 5, 5, 1546300800);

--PRICE-----------------------------------------------
MERGE INTO PRICE AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (1, 1, PARSEDATETIME('1 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('1 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 15);

MERGE INTO PRICE AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (2, 1, PARSEDATETIME('2 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('2 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 15);

MERGE INTO PRICE AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (3, 1, PARSEDATETIME('3 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'), PARSEDATETIME('3 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 15);

MERGE INTO PRICE AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (4, 2, PARSEDATETIME('1 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('1 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 20);

MERGE INTO PRICE AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (5, 2, PARSEDATETIME('2 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('2 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 20);

MERGE INTO PRICE AS target USING (SELECT 6 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (6, 2, PARSEDATETIME('3 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'), PARSEDATETIME('3 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 20);

MERGE INTO PRICE AS target USING (SELECT 7 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (7, 3, PARSEDATETIME('1 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('1 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 25);

MERGE INTO PRICE AS target USING (SELECT 8 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (8, 3, PARSEDATETIME('2 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('2 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 25);

MERGE INTO PRICE AS target USING (SELECT 9 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (9, 3, PARSEDATETIME('3 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'), PARSEDATETIME('3 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 25);

MERGE INTO PRICE AS target USING (SELECT 10 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (10, 4, PARSEDATETIME('1 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('1 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 30);

MERGE INTO PRICE AS target USING (SELECT 11 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (11, 4, PARSEDATETIME('2 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('2 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 30);

MERGE INTO PRICE AS target USING (SELECT 12 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (12, 4, PARSEDATETIME('3 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'), PARSEDATETIME('3 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 30);

MERGE INTO PRICE AS target USING (SELECT 13 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (13, 5, PARSEDATETIME('1 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('1 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 35);

MERGE INTO PRICE AS target USING (SELECT 14 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (14, 5, PARSEDATETIME('2 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'),PARSEDATETIME('2 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 35);

MERGE INTO PRICE AS target USING (SELECT 15 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PRICE_LIST_ID, START_DATE, END_DATE, PRICE) VALUES (15, 5, PARSEDATETIME('3 Sep 2020 08:00:00','dd MMM yyyy HH:mm:ss','en'), PARSEDATETIME('3 Sep 2020 23:00:00','dd MMM yyyy HH:mm:ss','en'), 35);

--BUNDLE--------------------------------------------
MERGE INTO BUNDLE AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (1, 1, 1, 2, 6);

MERGE INTO BUNDLE AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (2, 1, 1, 2, 6);

MERGE INTO BUNDLE AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (3, 1, 1, 2, 6);

MERGE INTO BUNDLE AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (4, 1, 1, 2, 6);

MERGE INTO BUNDLE AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (5, 1, 1, 1, 6);

MERGE INTO BUNDLE AS target USING (SELECT 51 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (51, 1, 1, 2, 2);

MERGE INTO BUNDLE AS target USING (SELECT 52 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (52, 2, 1, 2, 2);

MERGE INTO BUNDLE AS target USING (SELECT 53 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, USER_ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, STATE_ID) VALUES (53, 1, 1, 2, 4);

--RESERVATION----------------------------------------
MERGE INTO RESERVATION AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (1, 1, 1, 5, PARSEDATETIME('1 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('1 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 250, 100, TRUE );

MERGE INTO RESERVATION AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (2, 2, 1, 2, PARSEDATETIME('2 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('2 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 200, 0, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (3, 3, 1, 1, PARSEDATETIME('3 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('3 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 150, 0, TRUE );

MERGE INTO RESERVATION AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (4, 4, 1, 4, PARSEDATETIME('4 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 250, 0, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 51 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (51, 51, 1, null, PARSEDATETIME('1 Oct 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Oct 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 250, 100, TRUE );

MERGE INTO RESERVATION AS target USING (SELECT 52 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (52, 52, 1, null, PARSEDATETIME('2 Oct 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('3 Oct 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 200, 0, FALSE );

------------

MERGE INTO RESERVATION AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (5, 1, 2, 5, PARSEDATETIME('1 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('1 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 140, 0, TRUE);

MERGE INTO RESERVATION AS target USING (SELECT 6 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (6, 2, 2, 5, PARSEDATETIME('2 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('2 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 350, 0, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 7 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (7, 3, 2, 5, PARSEDATETIME('3 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('3 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 340, 90, TRUE);

MERGE INTO RESERVATION AS target USING (SELECT 8 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (8, 4, 2, 4, PARSEDATETIME('4 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 344, 34, FALSE );

--------------

MERGE INTO RESERVATION AS target USING (SELECT 9 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (9, 1, 3, 1, PARSEDATETIME('1 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('1 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 350, 10, TRUE);

MERGE INTO RESERVATION AS target USING (SELECT 10 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (10, 2, 3, 1, PARSEDATETIME('2 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('2 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 230, 12, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 11 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (11, 3, 3, 1, PARSEDATETIME('3 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('3 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 230, 10, TRUE);

MERGE INTO RESERVATION AS target USING (SELECT 12 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (12, 4, 3, 1, PARSEDATETIME('4 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 30, 330, FALSE );

--------------

MERGE INTO RESERVATION AS target USING (SELECT 13 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (13, 1, 4, 4, PARSEDATETIME('1 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('1 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 230, 3, TRUE);

MERGE INTO RESERVATION AS target USING (SELECT 14 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (14, 2, 4, 4, PARSEDATETIME('2 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('2 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 640, 500, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 15 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (15, 3, 4, 5, PARSEDATETIME('3 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('3 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 230, 11, TRUE);

MERGE INTO RESERVATION AS target USING (SELECT 16 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (16, 4, 4, 4, PARSEDATETIME('4 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 10, 10, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 17 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (17, 5, 5, null, PARSEDATETIME('4 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 10, NULL, FALSE );

MERGE INTO RESERVATION AS target USING (SELECT 18 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, BUNDLE_ID, CAR_ID, RATING, START_DATE, END_DATE, TOTAL_PRICE, EXTRA_CHARGES, WARRANTY_INCLUDED) VALUES (18, 5, 5, null, PARSEDATETIME('4 Jan 2020, 08:00:00 AM','dd MMM yyyy, hh:mm:ss a','en'), PARSEDATETIME('4 Jan 2020, 08:00:00 PM','dd MMM yyyy, hh:mm:ss a','en'), 10, NULL, FALSE );
--COMMENT-------------------------------
MERGE INTO COMMENT AS target USING (SELECT 1 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (1, 1, 1, 1, TRUE, '1591826330946', 'Beautiful car, great service');

MERGE INTO COMMENT AS target USING (SELECT 2 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (2, 1, 2, 1, TRUE, '1591826330946', 'Thank you, we hope to see you again soon!');

MERGE INTO COMMENT AS target USING (SELECT 3 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (3, 1, 1, 1, TRUE, '1591826330946', 'OK, Thank you!');

---

MERGE INTO COMMENT AS target USING (SELECT 4 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (4, 1, 1, 2, TRUE, '1591826330946', 'The car was very dirty and there was a rattling noise coming from the engine.');

MERGE INTO COMMENT AS target USING (SELECT 5 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (5, 1, 2, 2, TRUE, '1591826330946', 'We are sorry to hear you had a bad experience. All cars are thoroughly cleaned. We also consider all complaints very seriously. We hope to see you again!');

--

MERGE INTO COMMENT AS target USING (SELECT 6 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (6, 1, 1, 3, TRUE, '1591826330946', 'Never again!!');

MERGE INTO COMMENT AS target USING (SELECT 7 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (7, 1, 2, 3, TRUE, '1591826330946', 'Dear customer, we are sorry you had a bad experience. We still hope to remedy any complaints you may have, and hope to serve you in the future.');

--

MERGE INTO COMMENT AS target USING (SELECT 8 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (8, 1, 1, 4, TRUE, '1591826330946', 'You get what you pay for');

MERGE INTO COMMENT AS target USING (SELECT 9 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (9, 1, 2, 4, TRUE, '1591826330946', 'Dear user, thank you for your comment and rating. We try to keep our services at low cost. The cars are maintained after every use.');

--

MERGE INTO COMMENT AS target USING (SELECT 10 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (10, 1, 1, 5, TRUE, '1591826330946', 'Will reserve again');

MERGE INTO COMMENT AS target USING (SELECT 11 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (11, 1, 2, 5, TRUE, '1591826330946', 'Dear customer, we are happy to hear you are satisfied with our services. Thank you, we hope to see you again soon!');

--

MERGE INTO COMMENT AS target USING (SELECT 12 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (12, 1, 1, 6, TRUE, '1591826330946', 'Such a great car');

MERGE INTO COMMENT AS target USING (SELECT 13 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (13, 1, 2, 6, TRUE, '1591826330946', 'Thank you for your comment and rating. We are happy to hear you are satisfied with our car and services. We hope to see you again soon!');

--

MERGE INTO COMMENT AS target USING (SELECT 14 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (14, 1, 1, 7, TRUE, '1591826330946', 'I am 76 years old and just returned this car after reserving it for 5 days. Owned many cars in my lifetime,Corvett, Land rover,fords and on and on , cannot compare to this car. ');

MERGE INTO COMMENT AS target USING (SELECT 15 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (15, 1, 2, 7, TRUE, '1591826330946', 'Thank you for your rating and comment, we hope to see you again soon!');

--

MERGE INTO COMMENT AS target USING (SELECT 16 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (16, 1, 1, 8, TRUE, '1591826330946', 'I gave 4 stars because of the price');

MERGE INTO COMMENT AS target USING (SELECT 17 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (17, 1, 2, 8, TRUE, '1591826330946', 'Dear customer, thank you for your reply and rating. Our prices are as low as possible, while still maintaining good services.');

--

MERGE INTO COMMENT AS target USING (SELECT 18 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (18, 1, 1, 9, TRUE, '1591826330946', 'Just no.');

MERGE INTO COMMENT AS target USING (SELECT 19 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (19, 1, 2, 9, TRUE, '1591826330946', 'We are sorry you are not satisfied with our services. We hope to see you again and resolve any issues that you may have had.');

--

MERGE INTO COMMENT AS target USING (SELECT 20 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (20, 1, 1, 10, TRUE, '1591826330946', 'Dirty, old, rusted, do not want to be caught in it ever again');

MERGE INTO COMMENT AS target USING (SELECT 21 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (21, 1, 2, 10, TRUE, '1591826330946', 'Dear customer, we are sorry to hear you had a bad experience. We hope to see you again and resolve any issues that you may have had.');
--

MERGE INTO COMMENT AS target USING (SELECT 22 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (22, 1, 1, 11, TRUE, '1591826330946', 'It looks nothing like in the picture. Someone crashed in the door and it does not close well. Had to slam the door at every cross-road');

--

MERGE INTO COMMENT AS target USING (SELECT 23 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (23, 1, 1, 13, TRUE, '1591826330946','You get what you pay for, it is worth the money but it is not in mint condition');

MERGE INTO COMMENT AS target USING (SELECT 24 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (24, 1, 2, 13, TRUE, '1591826330946','Dear user, thank you for your comment and rating. We try to keep our services at low cost. The cars are maintained after every use.');

--

MERGE INTO COMMENT AS target USING (SELECT 25 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (25, 1, 1, 14, TRUE, '1591826330946','There was a weird smell, otherwise ok');

MERGE INTO COMMENT AS target USING (SELECT 26 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (26, 1, 2, 14, TRUE, '1591826330946','Dear customer, we are sorry to hear you had a bad experience. We hope to see you again and resolve any other issues you may have had.');

--

MERGE INTO COMMENT AS target USING (SELECT 27 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (27, 1, 1, 15, TRUE, '1591826330946','I rented this car for my sons prom, he was very happy');

MERGE INTO COMMENT AS target USING (SELECT 28 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (28, 1, 2, 15, TRUE, '1591826330946','Thank you, we hope to see you again soon!');

MERGE INTO COMMENT AS target USING (SELECT 29 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (29, 1, 1, 15, NULL, '1591826330946','Thanks');

MERGE INTO COMMENT AS target USING (SELECT 30 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (30, 1, 1, 15, NULL, '1591826330946','^&%"£$^%*)*_"&_s%^%!!!');

--

MERGE INTO COMMENT AS target USING (SELECT 31 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (31, 1, 1, 16, TRUE, '1591826330946','It would not start so I was late, but it was ok after that');

MERGE INTO COMMENT AS target USING (SELECT 32 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (32, 1, 2, 16, TRUE, '1591826330946','Thank you for your rating and comment, we hope we managed to resolve your issues in time. Hope to see you again soon!');

MERGE INTO COMMENT AS target USING (SELECT 33 as ID) AS source ON target.ID=source.ID
WHEN NOT MATCHED THEN INSERT (ID, PUBLISHER_ID, PUBLISHER_TYPE_ID, RESERVATION_ID, APPROVED, UNIX_TIMESTAMP, COMMENT) VALUES (33, 1, 1, 16, NULL, '1591826330946','Hopefully you will fix the cars in the meantime.');
